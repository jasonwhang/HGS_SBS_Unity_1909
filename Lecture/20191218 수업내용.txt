20191218 수업내용

- 동료캐릭터 가격변화와 강화하는 기능 만들기

// ------------------------------------------------------------------------------
1. 동료캐릭터 변화 공식에 대하여 알아보기

- 강화되는 타겟
=> ValueCurrent와 CostCurrent이다.
=> JobTime은 공식을 좀 더 세밀하게 작업을 해주어야 하기 때문에 지금은 하지 않는다.

- 일차직선그래프 형태로 성장하는 공식
=> y = ax + b

- 나중에 성장이 느려지는 반포물선 공식
=> y = logx or y = 루트x

// total_ego_add_effect는 0 ~ 1사이의 퍼센트값이다.
(Contents.BASEGAP + adding_stat_effect) * 
(1 + total_ego_add_effect) + total_relic_add_effect * 
(isActivateRelic((int)relicEN.Raylens) >= 0 ? 
1f + relicController.getifRectValue((int)relicEN.Rayless) : 1f)) *
season_adding_weight *
(1 + superAb_effect) *
(1 + season_stat_effect[])));

y = base + weight(위에 지수 : Level) + 알파
y = base * weight(위에 지수 : Level) * 알파

클릭커게임은 기본적으로 지수함식의 공식을 사용한다.

// ------------------------------------------------------------------------------
2. 공식 만들어주기위하여 변수 추가와 초기화

- ColleagueData에 변수 추가
- Awake함수에 동료캐릭터의 데이터를 써준 부분에 새로 추가한 변수에 대한 초기화값을 설정해주기
=> Base가 Current값보다 작으면 레벨업을 해도 낮아질 수 있는 가능성이 있다.
=> Base가 Current값보다 높으면 원래 그래프보다 성장폭이 커질 가능성이 있다.

// ------------------------------------------------------------------------------
3. AddLevel함수에서 공식 만들어주기

- 수정할 코드
mDataArr[id].Level += amount;
mDataArr[id].ValueCurrent += mDataArr[id].Level;
mDataArr[id].CostCurrent += mDataArr[id].Level;
mElementList[id].Renew(mDataArr[id].Contents, "구매", mDataArr[id].Level,
                       mDataArr[id].ValueCurrent, mDataArr[id].CostCurrent,
                       mDataArr[id].JobTime);

- 수정한 코드
mDataArr[id].ValueCurrent = mDataArr[id].ValueBase *
                            Math.Pow(mDataArr[id].ValueWeight, mDataArr[id].Level);

mDataArr[id].CostCurrent = mDataArr[id].CostBase *
                            Math.Pow(mDataArr[id].CostWeight, mDataArr[id].Level);

// ------------------------------------------------------------------------------
4. Level이 텍스트에 나오게 만들어주기

- UIElement.cs ->Renew함수 -> 코드 추가
mLevelText.text = "LV." + level.ToString();

// ------------------------------------------------------------------------------
5. 텍스트에 나오는 숫자를 깔끔하게 보여주게 하기

- 골드가 1000이 넘어가면 1K이렇게 단위가 나오게 하기
- 골드를 획득하는 숫자양을 표시해 줄 때 모든 숫자가 표시되는데 이것을 깔끔하게 보여지게 해주자.

- UnitBuilder.cs를 만들어준다.
=> 이 클래스는 UnityEngine이 필요없기 때문에 static class로 만들어준다.

- UIElement.cs에서 mContentsText.text와 mCostText.text를 만들어준 UnitBuilder의 함수를 호출하여
Text를 표시해준다.







































































































